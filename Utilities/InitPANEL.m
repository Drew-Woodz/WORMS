%% Initialization

% Create a figure
fig = figure();
fig.Position = getCenteredFigurePosition(1350, 600);

% Create a uipanel for the video on the left side
ui.videoPanel.video_panel = uipanel(fig, 'Position', ui.videoPanel.video_panel_pos, ...
                                         'Title', 'Video', ...
                                         'Tag', 'VideoPanel');
fig.UserData.ui.videoPanel.video_panel = ui.videoPanel.video_panel;

% Create a uipanel for the captured frame in the center 
ui.capturePanel.capture_panel = uipanel(fig, 'Position', ui.capturePanel.capture_panel_pos, ...
                                             'Title', 'Captured Frame', ...
                                             'Tag', 'ControlPanel');
fig.UserData.ui.capturePanel.capture_panel = ui.capturePanel.capture_panel;

% Create a uipanel for the output plots on the right side
ui.dataPanel.data_panel = uipanel(fig, 'Position', ui.dataPanel.data_panel_pos, ...
                                       'Title', 'Data', ...
                                       'Tag', 'DataPanel');
fig.UserData.ui.dataPanel.data_panel = ui.dataPanel.data_panel;


% Load the Placeholder videos
LoadPlaceholder; % Call LoadPlaceholder Script

% Create an axis within the ui.videoPanel.video_panel for displaying the video
ui.videoPanel.video_axes = axes('Parent', ui.videoPanel.video_panel, ...
                                'Units', 'normalized', ...
                                'Position', ui.videoPanel.video_axes_pos);

% Store the axes reference directly in fig.UserData
fig.UserData.ui.videoPanel.video_axes = ui.videoPanel.video_axes;

% Create an axis within the ui.dataPanel.data_panel for FFT visualization
ui.dataPanel.data_fft_axes = axes('Parent', ui.dataPanel.data_panel, ...
                                  'Units', 'normalized', ...
                                  'Position', ui.dataPanel.data_fft_axes_pos, ...
                                  'XTick', [], ...
                                  'YTick', [], ...
                                  'DataAspectRatio', [1 1 1]);
% Store the axes reference in fig.UserData
fig.UserData.data_fft_axes = ui.dataPanel.data_fft_axes;


% Display the first frame of the placeholder video in the axis
% Reset video reader to the beginning
video_video.reader.CurrentTime = 0;  
ui.videoPanel.firstFrame = readFrame(video_video.reader);
imh = imshow(ui.videoPanel.firstFrame, 'Parent', fig.UserData.ui.videoPanel.video_axes);
% Store the image handle for future reference
fig.UserData.imh = imh;  

% Display the first frame of the fft_overlay_video in the axis
% Reset video reader to the beginning
fft_overlay_video.reader.CurrentTime = 0;  
ui.dataPanel.firstFrame = readFrame(fft_overlay_video.reader);
fft_overlay_imh  = imshow(ui.dataPanel.firstFrame, 'Parent', fig.UserData.data_fft_axes);
% Store the image handle for future reference
fig.UserData.fft_overlay_imh = fft_overlay_imh;



%% Video Panel Buttons %%

% Add open video button to ui.videoPanel.video_panel
ui.videoPanel.open_video_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                         'Style', 'pushbutton', ...
                                         'String', 'Open Video', ...
                                         'Units', 'normalized', ...
                                         'Position', ui.videoPanel.open_video_btn_pos, ...
                                         'Callback', @openVideoCallback); % Callback

% Create panel for the play/pause slider
ui.videoPanel.play_slider_panel = uipanel('Parent', ui.videoPanel.video_panel, ...
                                          'Units', 'normalized', ...
                                          'Position', ui.videoPanel.play_slider_panel_pos, ...
                                          'BorderType', 'none');


% Create a play/pause button
ui.videoPanel.play_pause_button = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                            'Style', 'pushbutton', ...
                                            'String', 'Play/Pause', ...
                                            'Units', 'normalized', ...
                                            'Position', ui.videoPanel.play_pause_button_pos, ...
                                            'UserData', 'pause', ...
                                            'Tag', 'PlayPauseButton');
% Store the Play/Pause Button in UserData
fig.UserData.play_pause_button = ui.videoPanel.play_pause_button;

% Create a slider for the Video Panel video time range. Ensure max is at least 2
ui.videoPanel.sliderMax = max(2, video_video.reader.NumFrames); 
ui.videoPanel.play_slider = uicontrol('Parent', ui.videoPanel.play_slider_panel, ...
                                      'Style', 'slider', ...
                                      'Min', 1, ...
                                      'Max', ui.videoPanel.sliderMax, ...
                                      'Value', 1, ...
                                      'Units', 'normalized', ...
                                      'Position', [0 0 1 1], ...
                                      'Callback', @(src, event) updateVideoFrame(src, timebox, ui.videoPanel.play_pause_button));
% Store the Slider in UserData
fig.UserData.play_slider = ui.videoPanel.play_slider;

% Create a text box for the current time
ui.videoPanel.timebox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                  'Style', 'text', ...
                                  'Units', 'normalized', ...
                                  'Position', ui.videoPanel.timebox_pos, ...
                                  'String', 'Frame: Open Video!', ...
                                  'BackgroundColor', fig.Color);

% Set play/pause button callback
set(ui.videoPanel.play_pause_button, 'Callback', @(src, event) playPauseVideo(src, event, ui.videoPanel.play_slider, ui.videoPanel.timebox));

% Set Video Panel Play slider callback
set(ui.videoPanel.play_slider, 'Callback', @(src, event) updateVideoFrame(src, ui.videoPanel.timebox, ui.videoPanel.play_pause_button));


% Store the timebox in UserData
fig.UserData.timebox = ui.videoPanel.timebox;


% Video Panel Edit Boxes
% Create Select Area Textboxes X1Y1
ui.videoPanel.x1y1_textbox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                       'Style', 'edit', ...
                                       'Units', 'normalized', ...
                                       'Position', ui.videoPanel.x1y1_textbox_pos, ...
                                       'String', 'X1Y1');

% Store X1Y1 Textbox in UserData
fig.UserData.x1y1_textbox = ui.videoPanel.x1y1_textbox;

% Create Select Area Textboxes X2Y2
ui.videoPanel.x2y2_textbox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                       'Style', 'edit', ...
                                       'Units', 'normalized', ...
                                       'Position', ui.videoPanel.x2y2_textbox_pos, ...
                                       'String', 'X2Y2');
% Store X2Y2 Textbox in UserData
fig.UserData.x2y2_textbox = ui.videoPanel.x2y2_textbox;

% Create Start Frame Textbox
ui.videoPanel.start_frame_textbox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                              'Style', 'edit', ...
                                              'Units', 'normalized', ...
                                              'Position', ui.videoPanel.start_frame_textbox_pos, ...
                                              'String', 'Start Frame');
% Store Start Frame Textbox in UserData
fig.UserData.start_frame_textbox = ui.videoPanel.start_frame_textbox;

% Create End Frame Textbox
ui.videoPanel.end_frame_textbox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                            'Style', 'edit', ...
                                             'Units', 'normalized', ...
                                             'Position', ui.videoPanel.end_frame_textbox_pos, ...
                                             'String', 'End Frame');

% Store End Frame Textbox
fig.UserData.end_frame_textbox = ui.videoPanel.end_frame_textbox;


% Create Select Area Button
ui.videoPanel.select_area_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                          'Style', 'pushbutton', ...
                                          'String', 'Select Area', ...
                                          'Units', 'normalized', ...
                                          'Position', ui.videoPanel.select_area_btn_pos);
% Set Callback for Select Area Button
set(ui.videoPanel.select_area_btn, 'Callback', @selectAreaCallback);

% Create Clear Area Button
ui.videoPanel.clear_area_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                         'Style', 'pushbutton', ...
                                         'String', 'Clear Area', ...
                                         'Units', 'normalized', ...
                                         'Position', ui.videoPanel.clear_area_btn_pos);
% Set Clear Area Callback
set(ui.videoPanel.clear_area_btn, 'Callback', @clearAreaCallback);

% Create Set Start frame Button
ui.videoPanel.set_start_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                        'Style', 'pushbutton', ...
                                        'String', 'Set Start', ...
                                        'Units', 'normalized', ...
                                        'Position', ui.videoPanel.set_start_btn_pos);
% Set Start frame Button Callback
set(ui.videoPanel.set_start_btn, 'Callback', @setStartCallback);

% Create End
ui.videoPanel.set_end_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                      'Style', 'pushbutton', ...
                                      'String', 'Set End', ...
                                      'Units', 'normalized', ...
                                      'Position', ui.videoPanel.set_end_btn_pos);
% Set End frame Button Callback
set(ui.videoPanel.set_end_btn, 'Callback', @setEndCallback);

% Create Render button
ui.videoPanel.render_btn = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                     'Style', 'pushbutton', ...
                                     'String', 'Render', ...
                                     'Units', 'normalized', ...
                                     'Position', ui.videoPanel.render_btn_pos);

% Set Render Button Callback
set(ui.videoPanel.render_btn, 'Callback', @renderCallback);

% Motion Correction text label
ui.videoPanel.motion_correct_text = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                              'Style', 'text', ...
                                              'Units', 'normalized', ...
                                              'Position', ui.videoPanel.motion_correct_text_pos, ...
                                              'String', 'Correct Motion', ...
                                              'BackgroundColor', ui.videoPanel.video_panel.BackgroundColor);

% Enable Motion Correction before Render
ui.videoPanel.motion_correct_checkbox = uicontrol('Parent', ui.videoPanel.video_panel, ...
                                                  'Style', 'checkbox', ... % Checkbox
                                                  'Units', 'normalized', ...
                                                  'Position', ui.videoPanel.motion_correct_checkbox_pos, ...
                                                  'Value', 0, ...
                                                  'Callback', @motionCorrectionCallback);

% Store Motion Correction Checkbox in UserData
fig.UserData.motion_correct_checkbox.Value = ui.videoPanel.motion_correct_checkbox.Value;




%% Capture Panel %%

% Create an axis within the ui.capturePanel.capture_panel for displaying the captured video
ui.capturePanel.capture_axes = axes('Parent', ui.capturePanel.capture_panel, ...
                                    'Units', 'normalized', ...
                                    'Position', ui.capturePanel.capture_axes_pos);

% Store the axes reference directly in fig.UserData
fig.UserData.capture_axes = ui.capturePanel.capture_axes;

% Create an axis within the ui.capturePanel.capture_panel for FFT visualization
ui.capturePanel.fft_axes = axes('Parent', ui.capturePanel.capture_panel, ...
                                    'Units', 'normalized', ...
                                    'Position', ui.capturePanel.fft_axes_pos, ...
                                    'XTick', [], ...
                                    'YTick', [], ...
                                    'DataAspectRatio', [1 1 1]);
% Store fft axes in UserData
fig.UserData.fft_axes = ui.capturePanel.fft_axes; 

% Display the first frame of the CapturePlaceHolder video in the axis
capture_video.reader.CurrentTime = 0;  % Reset video reader to the beginning
ui.capturePanel.captureFirstFrame = readFrame(capture_video.reader);
ui.capturePanel.capture_imh = imshow(ui.capturePanel.captureFirstFrame, 'Parent', fig.UserData.capture_axes);  
fig.UserData.capture_imh = ui.capturePanel.capture_imh;  % Store the image handle for future reference


%% Capture Panel Buttons%%


% PLAY/PAUSE CLIP 
% Create a Play/Pause Button for the Capture Panel Clip
ui.capturePanel.capture_play_pause_button = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                      'Style', 'pushbutton', ...
                                                      'String', 'Play/Pause', ...
                                                      'Units', 'normalized', ...
                                                      'Position', ui.capturePanel.capture_play_pause_button_pos, ...
                                                      'UserData', 'pause', ...
                                                      'Tag', 'CapturePlayPauseButton');
% Store Capture Clips Play/Pause Button
fig.UserData.capture_play_pause_button = ui.capturePanel.capture_play_pause_button;

% Create a slider panel for the Capture Clip Time range
ui.capturePanel.capture_play_slider_panel = uipanel('Parent', ui.capturePanel.capture_panel, ...
                                                    'Units', 'normalized', ...
                                                    'Position', ui.capturePanel.capture_slider_panel_pos, ...
                                                    'BorderType', 'none', ...
                                                    'Units', 'normalized');
% Set slider max to video length. Ensure max is at least 2
ui.capturePanel.capture_sliderMax = max(2, capture_video.reader.NumFrames); 

% Create the play/pause clip slider for the slider panel
ui.capturePanel.capture_play_slider = uicontrol('Parent', ui.capturePanel.capture_play_slider_panel, ...
                                                'Style', 'slider', ...
                                                'Min', 1, ...
                                                'Max', ui.capturePanel.capture_sliderMax, ...
                                                'Value', 1, ...
                                                'Units', 'normalized', ...
                                                'Position', [0 0 1 1]);
% Store the play/pause slider in UserData
fig.UserData.capture_play_slider = ui.capturePanel.capture_play_slider;




% Add "Select ROI" button to ui.capturePanel.capture_panel
ui.capturePanel.capture_select_roi_btn = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                   'Style', 'pushbutton', ...
                                                   'String', 'Select ROI', ...
                                                   'Units', 'normalized', ...
                                                   'Position', ui.capturePanel.capture_select_roi_btn_pos, ...
                                                   'Callback', @captureSelectROICallback);
% Store the Capture Select ROI Button
fig.UserData.capture_select_roi_btn = ui.capturePanel.capture_select_roi_btn;

% Create Capture Clear ROI Button
ui.capturePanel.capture_clear_roi_btn = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                  'Style', 'pushbutton', ...
                                                  'String', 'Clear ROI', ...
                                                  'Units', 'normalized', ...
                                                  'Position', ui.capturePanel.capture_clear_roi_btn_pos, ...
                                                  'Callback', @captureClearROICallback);
% Store Capture Clear ROI Button in UserData
fig.UserData.capture_clear_roi_btn = ui.capturePanel.capture_clear_roi_btn;


% Create Analyze Button for FFT
ui.capturePanel.capture_analyze_btn = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                'Style', 'pushbutton', ...
                                                'String', 'Analyze', ...
                                                'Units', 'normalized', ...
                                                'Position', ui.capturePanel.capture_analyze_btn_pos, ...
                                                'Callback', @analyzeCallback);
% Store Analyze Button in UserData
fig.UserData.capture_analyze_btn = ui.capturePanel.capture_analyze_btn;

% Create a text box for the current time in the capture panel
ui.capturePanel.capture_timebox = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                            'Style', 'text', ...
                                            'Units', 'normalized', ...
                                            'Position', ui.capturePanel.capture_timebox_pos, ...
                                            'String', 'Frame: Render Clip!');
% Store Capture Timebox in UserData
fig.UserData.capture_timebox = ui.capturePanel.capture_timebox;


% Enable PreProcess 
% Preprocess Checkbox
ui.capturePanel.preprocess_checkbox = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                'Style', 'checkbox', ... % Checkbox
                                                'Units', 'normalized', ...
                                                'Position', ui.capturePanel.preprocess_checkbox_pos, ...
                                                'String', 'Preprocess', ...
                                                'Value', 0); % Checkbox is unchecked by default
% Store Preprocess Checkbox
fig.UserData.preprocess_checkbox = ui.capturePanel.preprocess_checkbox;



% Set initial value
ui.capturePanel.initialValue = 0;
% Calculate steps for the slider
ui.capturePanel.minValue = 0;
ui.capturePanel.maxValue = 11;  % Maximum is 11
% The step increment should be the difference between two consecutive odd numbers divided by the range
% Since we want the steps to be 0, 3, 5, 7, 9, 11, we'll have a step of 2/11 for the small step
ui.capturePanel.smallStep = 2 / (ui.capturePanel.maxValue - ui.capturePanel.minValue); % This corresponds to a step of 2
% The large step can be the same as the small step in this case, as we only have specific odd values we're jumping through
ui.capturePanel.largeStep = ui.capturePanel.smallStep;
    
% Create the slider
ui.capturePanel.kernel_size_slider = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                               'Style', 'slider', ...
                                               'Units', 'normalized', ...
                                               'Position', ui.capturePanel.kernel_size_slider_pos, ...
                                               'Min', ui.capturePanel.minValue, ...
                                               'Max', ui.capturePanel.maxValue, ...
                                               'Value', ui.capturePanel.initialValue, ...
                                               'SliderStep', [ui.capturePanel.smallStep, ui.capturePanel.largeStep], ...
                                               'Callback', @adjustKernelSlider, ...
                                               'Enable', 'off'); % Slider starts disabled
% Store the Convolution Slider in UserData
fig.UserData.kernel_size_slider = ui.capturePanel.kernel_size_slider;

% Create the Kernel Size Label
ui.capturePanel.kernel_size_label = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                              'Style', 'text', ...
                                              'Units', 'normalized', ...
                                              'Position', ui.capturePanel.kernel_size_label_pos, ...
                                              'String', ['Kernel Size: ', num2str(ui.capturePanel.initialValue)], ...
                                              'BackgroundColor', ui.capturePanel.capture_panel.BackgroundColor, ... % Callback Function
                                              'Enable', 'off'); % Starts disabled
% Store the Kernel Size Label in UserData
fig.UserData.kernel_size_label = ui.capturePanel.kernel_size_label;

% Sharpen Slider
ui.capturePanel.sharpen_slider = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                           'Style', 'slider', ... % Slider
                                           'Units', 'normalized', ... % Normalize units
                                           'Position', ui.capturePanel.sharpen_slider_pos, ... % Set Position
                                           'Min', 0, 'Max', 1, 'Value', 0, ...  % Adjust the range as needed, start at 0
                                           'SliderStep', [0.1, 0.2], ...  % Step size for the slider
                                           'Callback', @adjustSharpenSlider, ... % Callback Function
                                           'Enable', 'off'); % Start disabled
fig.UserData.sharpen_slider = ui.capturePanel.sharpen_slider;

% Sharpen Label
ui.capturePanel.sharpen_label = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                          'Style', 'text', ... % Textbox
                                          'Units', 'normalized', ... % Normalize units
                                          'Position', ui.capturePanel.sharpen_slider_label_pos, ... % Set Position
                                          'String', 'Sharpen: 0.00', ...  % Start with label showing 0
                                          'BackgroundColor', ui.capturePanel.capture_panel.BackgroundColor, ... % Adjust background color
                                          'Enable', 'off'); % Start disabled
% Store Sharpen Lable in UserData
fig.UserData.sharpen_label = ui.capturePanel.sharpen_label;

% Background Subtraction Checkbox
ui.capturePanel.background_sub_checkbox = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                    'Style', 'checkbox', ... % Checkbox
                                                    'Units', 'normalized', ... % Normalize units
                                                    'Position', ui.capturePanel.background_sub_checkbox_pos, ... % Set Position
                                                    'String', 'Background Sub', ... % Checkbox Label
                                                    'Value', 0, ... % Default Value
                                                    'Enable', 'off'); % Start disabled

% Store Background Subtraction Checkbox in UserData
fig.UserData.background_sub_checkbox = ui.capturePanel.background_sub_checkbox;

% Update the state of other components based on the preprocess checkbox
preprocessCheckboxCallback(fig.UserData.preprocess_checkbox, [], fig);

% FFT Heatmap Visualization
% Create a slider panel for the FFT frame range
ui.capturePanel.fft_play_slider_panel = uipanel('Parent', ui.capturePanel.capture_panel, ...
                                                'Units', 'normalized', ...
                                                'Position', ui.capturePanel.fft_slider_panel_pos, ...
                                                'BorderType', 'none', ...
                                                'Units', 'normalized');
% Initialize the FFT data
fig.UserData.fftData = zeros(1, 1); % Placeholder data

% Set the max for the FFT slider and tie it to the FFT Data
ui.capturePanel.fft_sliderMax = size(fig.UserData.fftData, 3);

% Create the FFT Play Slider for scrolling FFT Frequency Slides
ui.capturePanel.fft_play_slider = uicontrol('Parent', ui.capturePanel.fft_play_slider_panel, ...
                                            'Style', 'slider', ...
                                            'Min', 1, ...
                                            'Max', ui.capturePanel.fft_sliderMax, ...
                                            'Value', 1, ...
                                            'Units', 'normalized', ...
                                            'Tag', 'fft_slider', ...
                                            'Position', [0 0 1 1]);
% Store the FFT Play Slider in UserData
fig.UserData.fft_play_slider = ui.capturePanel.fft_play_slider;

% Set the callback for the FFT Slider
set(ui.capturePanel.fft_play_slider, 'Callback', @(src, event) updateFFTDisplay(src, event, fig));

% Set the callback for the Preprocess Checkbox
set(ui.capturePanel.preprocess_checkbox, 'Callback', @(src, event) preprocessCheckboxCallback(src, event, fig));

% Slider for overlay Threshold
% Create the vertical slider
ui.capturePanel.fft_overlay_threshold_slider = uicontrol('Parent', ui.capturePanel.capture_panel, ...
                                                         'Style', 'slider', ...
                                                         'Min', 0, 'Max', 1, ...
                                                         'Value', 0.5, ...  % starting value in the middle
                                                         'Units', 'normalized', ...
                                                         'Position', ui.capturePanel.fft_overlay_threshold_slider_pos, ...
                                                         'Tag', 'threshold_slider', ...
                                                         'Callback', {@fftOverlayThresholdSliderCallback, fig});

% Set the callback function for the capture play/pause button
set(ui.capturePanel.capture_play_pause_button, 'Callback', @(src, event) playPauseCaptureVideo(src, event, ui.capturePanel.capture_play_slider));
% Set the callback to the capture_play_slider
set(ui.capturePanel.capture_play_slider, 'Callback', @(src, event) updateCaptureVideoFrame(src, fig.UserData.capture_play_pause_button));

%% Data Panel %%

% Create an axis within the ui.dataPanel.data_panel for displaying the fft
ui.dataPanel.data_axes = axes('Parent', ui.dataPanel.data_panel, ...
                              'Units', 'normalized', ...
                              'Position', ui.dataPanel.data_axes_pos);

% Store the axes in UserData
fig.UserData.data_axes = ui.dataPanel.data_axes; 

% Create a play/pause button for the fft overlay video
ui.dataPanel.fft_overlay_play_pause_button = uicontrol('Parent', ui.dataPanel.data_panel, ...
                                                       'Style', 'pushbutton', ...
                                                       'String', 'Play/Pause', ...
                                                       'Units', 'normalized', ...
                                                       'Position', ui.dataPanel.fft_overlay_play_pause_button_pos, ...
                                                       'UserData', 'pause', ...
                                                       'Tag', 'CapturePlayPauseButton');

% Store the overlay Play/Pause button in UserData
fig.UserData.fft_overlay_play_pause_button = ui.dataPanel.fft_overlay_play_pause_button;

% Set the fft overlay slider max
ui.dataPanel.fft_overlay_sliderMax = size(fft_overlay_video.frames, 4); 

% Create a slider panel for the overlay video time range
ui.dataPanel.fft_overlay_play_slider_panel = uipanel('Parent', ui.dataPanel.data_panel, ...
                                                     'Units', 'normalized', ...
                                                     'Position', ui.dataPanel.fft_overlay_slider_panel_pos, ...
                                                     'BorderType', 'none');

% Create the FFT overlay slider
ui.dataPanel.fft_overlay_play_slider = uicontrol('Parent', ui.dataPanel.fft_overlay_play_slider_panel, ...
                                                 'Style', 'slider', ...
                                                 'Min', 1, ...
                                                 'Max', ui.dataPanel.fft_overlay_sliderMax, ...
                                                 'Value', 1, ...
                                                 'Units', 'normalized', ...
                                                 'Position', [0 0 1 1]);

% Store fft overlay play slider in UserData
fig.UserData.fft_overlay_play_slider = ui.dataPanel.fft_overlay_play_slider;

% Create a text box for the current time in the fft overlay video
ui.dataPanel.fft_overlay_timebox = uicontrol('Parent', ui.dataPanel.data_panel, ...
                                             'Style', 'text', ...
                                             'Units', 'normalized', ...
                                             'Position', ui.dataPanel.fft_overlay_timebox_pos, ...
                                             'String', 'Frame: Analyze Clip!');

fig.UserData.fft_overlay_timebox = ui.dataPanel.fft_overlay_timebox;

% Set the callback function for the fft overlay play/pause button
set(ui.dataPanel.fft_overlay_play_pause_button, 'Callback', @(src, event) playPauseFFToverlayVideo(src, event, ui.dataPanel.fft_overlay_play_slider));
% Set the callback to the fft_overlay_play_slider
set(ui.dataPanel.fft_overlay_play_slider, 'Callback', @(src, event) updateFFTVideoFrame(src, fig.UserData.fft_overlay_play_pause_button));

